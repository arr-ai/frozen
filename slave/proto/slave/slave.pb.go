// Code generated by protoc-gen-go. DO NOT EDIT.
// source: slave.proto

package slave

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UnionRequest_Op int32

const (
	UnionRequest_OP_UNSPECIFIED       UnionRequest_Op = 0
	UnionRequest_OP_CARTESIAN_PRODUCT UnionRequest_Op = 1
)

var UnionRequest_Op_name = map[int32]string{
	0: "OP_UNSPECIFIED",
	1: "OP_CARTESIAN_PRODUCT",
}

var UnionRequest_Op_value = map[string]int32{
	"OP_UNSPECIFIED":       0,
	"OP_CARTESIAN_PRODUCT": 1,
}

func (x UnionRequest_Op) String() string {
	return proto.EnumName(UnionRequest_Op_name, int32(x))
}

func (UnionRequest_Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{0, 0}
}

type UnionRequest struct {
	A                    *Tree           `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    *Tree           `protobuf:"bytes,2,opt,name=b,proto3" json:"b,omitempty"`
	Op                   UnionRequest_Op `protobuf:"varint,3,opt,name=op,proto3,enum=UnionRequest_Op" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UnionRequest) Reset()         { *m = UnionRequest{} }
func (m *UnionRequest) String() string { return proto.CompactTextString(m) }
func (*UnionRequest) ProtoMessage()    {}
func (*UnionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{0}
}

func (m *UnionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnionRequest.Unmarshal(m, b)
}
func (m *UnionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnionRequest.Marshal(b, m, deterministic)
}
func (m *UnionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnionRequest.Merge(m, src)
}
func (m *UnionRequest) XXX_Size() int {
	return xxx_messageInfo_UnionRequest.Size(m)
}
func (m *UnionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnionRequest proto.InternalMessageInfo

func (m *UnionRequest) GetA() *Tree {
	if m != nil {
		return m.A
	}
	return nil
}

func (m *UnionRequest) GetB() *Tree {
	if m != nil {
		return m.B
	}
	return nil
}

func (m *UnionRequest) GetOp() UnionRequest_Op {
	if m != nil {
		return m.Op
	}
	return UnionRequest_OP_UNSPECIFIED
}

type Value struct {
	// Types that are valid to be assigned to Choice:
	//	*Value_I
	//	*Value_F
	//	*Value_Kv
	Choice               isValue_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_Choice interface {
	isValue_Choice()
}

type Value_I struct {
	I int64 `protobuf:"varint,1,opt,name=i,proto3,oneof"`
}

type Value_F struct {
	F float64 `protobuf:"fixed64,2,opt,name=f,proto3,oneof"`
}

type Value_Kv struct {
	Kv *Value_KV `protobuf:"bytes,4,opt,name=kv,proto3,oneof"`
}

func (*Value_I) isValue_Choice() {}

func (*Value_F) isValue_Choice() {}

func (*Value_Kv) isValue_Choice() {}

func (m *Value) GetChoice() isValue_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *Value) GetI() int64 {
	if x, ok := m.GetChoice().(*Value_I); ok {
		return x.I
	}
	return 0
}

func (m *Value) GetF() float64 {
	if x, ok := m.GetChoice().(*Value_F); ok {
		return x.F
	}
	return 0
}

func (m *Value) GetKv() *Value_KV {
	if x, ok := m.GetChoice().(*Value_Kv); ok {
		return x.Kv
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Value) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Value_I)(nil),
		(*Value_F)(nil),
		(*Value_Kv)(nil),
	}
}

type Value_KV struct {
	Key                  *Value   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *Value   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Value_KV) Reset()         { *m = Value_KV{} }
func (m *Value_KV) String() string { return proto.CompactTextString(m) }
func (*Value_KV) ProtoMessage()    {}
func (*Value_KV) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{1, 0}
}

func (m *Value_KV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value_KV.Unmarshal(m, b)
}
func (m *Value_KV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value_KV.Marshal(b, m, deterministic)
}
func (m *Value_KV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value_KV.Merge(m, src)
}
func (m *Value_KV) XXX_Size() int {
	return xxx_messageInfo_Value_KV.Size(m)
}
func (m *Value_KV) XXX_DiscardUnknown() {
	xxx_messageInfo_Value_KV.DiscardUnknown(m)
}

var xxx_messageInfo_Value_KV proto.InternalMessageInfo

func (m *Value_KV) GetKey() *Value {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Value_KV) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

type Tree struct {
	// Types that are valid to be assigned to Choice:
	//	*Tree_Empty_
	//	*Tree_Node_
	//	*Tree_Leaf_
	Choice               isTree_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Tree) Reset()         { *m = Tree{} }
func (m *Tree) String() string { return proto.CompactTextString(m) }
func (*Tree) ProtoMessage()    {}
func (*Tree) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{2}
}

func (m *Tree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree.Unmarshal(m, b)
}
func (m *Tree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree.Marshal(b, m, deterministic)
}
func (m *Tree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree.Merge(m, src)
}
func (m *Tree) XXX_Size() int {
	return xxx_messageInfo_Tree.Size(m)
}
func (m *Tree) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree.DiscardUnknown(m)
}

var xxx_messageInfo_Tree proto.InternalMessageInfo

type isTree_Choice interface {
	isTree_Choice()
}

type Tree_Empty_ struct {
	Empty *Tree_Empty `protobuf:"bytes,1,opt,name=empty,proto3,oneof"`
}

type Tree_Node_ struct {
	Node *Tree_Node `protobuf:"bytes,2,opt,name=node,proto3,oneof"`
}

type Tree_Leaf_ struct {
	Leaf *Tree_Leaf `protobuf:"bytes,3,opt,name=leaf,proto3,oneof"`
}

func (*Tree_Empty_) isTree_Choice() {}

func (*Tree_Node_) isTree_Choice() {}

func (*Tree_Leaf_) isTree_Choice() {}

func (m *Tree) GetChoice() isTree_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *Tree) GetEmpty() *Tree_Empty {
	if x, ok := m.GetChoice().(*Tree_Empty_); ok {
		return x.Empty
	}
	return nil
}

func (m *Tree) GetNode() *Tree_Node {
	if x, ok := m.GetChoice().(*Tree_Node_); ok {
		return x.Node
	}
	return nil
}

func (m *Tree) GetLeaf() *Tree_Leaf {
	if x, ok := m.GetChoice().(*Tree_Leaf_); ok {
		return x.Leaf
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Tree) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Tree_Empty_)(nil),
		(*Tree_Node_)(nil),
		(*Tree_Leaf_)(nil),
	}
}

type Tree_Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tree_Empty) Reset()         { *m = Tree_Empty{} }
func (m *Tree_Empty) String() string { return proto.CompactTextString(m) }
func (*Tree_Empty) ProtoMessage()    {}
func (*Tree_Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{2, 0}
}

func (m *Tree_Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree_Empty.Unmarshal(m, b)
}
func (m *Tree_Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree_Empty.Marshal(b, m, deterministic)
}
func (m *Tree_Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree_Empty.Merge(m, src)
}
func (m *Tree_Empty) XXX_Size() int {
	return xxx_messageInfo_Tree_Empty.Size(m)
}
func (m *Tree_Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Tree_Empty proto.InternalMessageInfo

type Tree_Node struct {
	Mask                 uint32   `protobuf:"varint,1,opt,name=mask,proto3" json:"mask,omitempty"`
	Children             []*Tree  `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tree_Node) Reset()         { *m = Tree_Node{} }
func (m *Tree_Node) String() string { return proto.CompactTextString(m) }
func (*Tree_Node) ProtoMessage()    {}
func (*Tree_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{2, 1}
}

func (m *Tree_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree_Node.Unmarshal(m, b)
}
func (m *Tree_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree_Node.Marshal(b, m, deterministic)
}
func (m *Tree_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree_Node.Merge(m, src)
}
func (m *Tree_Node) XXX_Size() int {
	return xxx_messageInfo_Tree_Node.Size(m)
}
func (m *Tree_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Tree_Node proto.InternalMessageInfo

func (m *Tree_Node) GetMask() uint32 {
	if m != nil {
		return m.Mask
	}
	return 0
}

func (m *Tree_Node) GetChildren() []*Tree {
	if m != nil {
		return m.Children
	}
	return nil
}

type Tree_Leaf struct {
	Values               []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tree_Leaf) Reset()         { *m = Tree_Leaf{} }
func (m *Tree_Leaf) String() string { return proto.CompactTextString(m) }
func (*Tree_Leaf) ProtoMessage()    {}
func (*Tree_Leaf) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{2, 2}
}

func (m *Tree_Leaf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree_Leaf.Unmarshal(m, b)
}
func (m *Tree_Leaf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree_Leaf.Marshal(b, m, deterministic)
}
func (m *Tree_Leaf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree_Leaf.Merge(m, src)
}
func (m *Tree_Leaf) XXX_Size() int {
	return xxx_messageInfo_Tree_Leaf.Size(m)
}
func (m *Tree_Leaf) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree_Leaf.DiscardUnknown(m)
}

var xxx_messageInfo_Tree_Leaf proto.InternalMessageInfo

func (m *Tree_Leaf) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterEnum("UnionRequest_Op", UnionRequest_Op_name, UnionRequest_Op_value)
	proto.RegisterType((*UnionRequest)(nil), "UnionRequest")
	proto.RegisterType((*Value)(nil), "Value")
	proto.RegisterType((*Value_KV)(nil), "Value.KV")
	proto.RegisterType((*Tree)(nil), "Tree")
	proto.RegisterType((*Tree_Empty)(nil), "Tree.Empty")
	proto.RegisterType((*Tree_Node)(nil), "Tree.Node")
	proto.RegisterType((*Tree_Leaf)(nil), "Tree.Leaf")
}

func init() { proto.RegisterFile("slave.proto", fileDescriptor_5203a3ed916706d4) }

var fileDescriptor_5203a3ed916706d4 = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x8d, 0x9d, 0x0f, 0x96, 0x29, 0x5b, 0x55, 0x03, 0x07, 0x2b, 0x20, 0x08, 0x41, 0x42, 0x3d,
	0xe5, 0x10, 0xae, 0x70, 0x58, 0xba, 0x41, 0xa9, 0x16, 0x35, 0x91, 0xfb, 0x71, 0xad, 0xd2, 0xd6,
	0xd1, 0x46, 0xc9, 0xc6, 0xa1, 0xe9, 0x46, 0xe2, 0x3f, 0x20, 0xfe, 0x27, 0xff, 0x02, 0xd9, 0x69,
	0xf6, 0xe3, 0xe6, 0x79, 0xef, 0xf9, 0x79, 0x9e, 0x67, 0x60, 0xd4, 0x56, 0x59, 0x27, 0x82, 0xe6,
	0x28, 0x4f, 0xd2, 0xff, 0x4b, 0xe0, 0xd5, 0xba, 0x2e, 0x64, 0xcd, 0xc5, 0xaf, 0x7b, 0xd1, 0x9e,
	0xf0, 0x35, 0x90, 0x8c, 0x11, 0x8f, 0x4c, 0x47, 0xa1, 0x1d, 0xac, 0x8e, 0x42, 0x70, 0x92, 0x29,
	0x70, 0xc7, 0xe8, 0x33, 0x70, 0x87, 0x1e, 0x50, 0xd9, 0x30, 0xd3, 0x23, 0xd3, 0x71, 0x38, 0x09,
	0x9e, 0x9a, 0x04, 0x49, 0xc3, 0xa9, 0x6c, 0xfc, 0x10, 0x68, 0xd2, 0x20, 0xc2, 0x38, 0x49, 0xb7,
	0xeb, 0xc5, 0x32, 0x8d, 0x66, 0xf3, 0x1f, 0xf3, 0xe8, 0x7a, 0x62, 0x20, 0x83, 0x37, 0x49, 0xba,
	0x9d, 0x5d, 0xf1, 0x55, 0xb4, 0x9c, 0x5f, 0x2d, 0xb6, 0x29, 0x4f, 0xae, 0xd7, 0xb3, 0xd5, 0x84,
	0xf8, 0x7f, 0x08, 0xd8, 0x9b, 0xac, 0xba, 0x17, 0x38, 0x06, 0x52, 0xe8, 0x4e, 0xcc, 0xd8, 0xe0,
	0xa4, 0x50, 0x75, 0xae, 0x9b, 0x20, 0xaa, 0xce, 0xf1, 0x2d, 0xd0, 0xb2, 0x63, 0x96, 0xee, 0xea,
	0x65, 0xa0, 0xef, 0x04, 0x37, 0x9b, 0xd8, 0xe0, 0xb4, 0xec, 0xdc, 0xaf, 0x40, 0x6f, 0x36, 0xc8,
	0xc0, 0x2c, 0xc5, 0xef, 0x73, 0x1c, 0xa7, 0xd7, 0x70, 0x05, 0xe1, 0x3b, 0xb0, 0x3b, 0x55, 0x9d,
	0x53, 0x0d, 0x5c, 0x0f, 0x7e, 0xbf, 0x00, 0x67, 0x7f, 0x2b, 0x8b, 0xbd, 0xf0, 0xff, 0x11, 0xb0,
	0x54, 0x60, 0xfc, 0x04, 0xb6, 0xb8, 0x6b, 0x4e, 0x83, 0xd9, 0x48, 0x7f, 0x43, 0x10, 0x29, 0x28,
	0x36, 0x78, 0xcf, 0xa1, 0x07, 0x56, 0x2d, 0x0f, 0x83, 0x29, 0xf4, 0x9a, 0x85, 0x3c, 0x88, 0xd8,
	0xe0, 0x9a, 0x51, 0x8a, 0x4a, 0x64, 0xb9, 0xfe, 0xb6, 0x07, 0xc5, 0x4f, 0x91, 0xe5, 0x4a, 0xa1,
	0x18, 0xf7, 0x05, 0xd8, 0xda, 0xd5, 0xfd, 0x06, 0x96, 0xba, 0x8a, 0x08, 0xd6, 0x5d, 0xd6, 0x96,
	0xfa, 0xe1, 0x4b, 0xae, 0xcf, 0xf8, 0x11, 0x2e, 0xf6, 0xb7, 0x45, 0x75, 0x38, 0x8a, 0x9a, 0x51,
	0xcf, 0x7c, 0x9c, 0xcb, 0x03, 0xec, 0x7e, 0x06, 0x4b, 0xf9, 0xe2, 0x7b, 0x70, 0x74, 0xa8, 0x96,
	0x11, 0x2d, 0x1c, 0xa2, 0x9e, 0xd1, 0xc7, 0xac, 0xe1, 0x14, 0xec, 0xa5, 0x5a, 0x0d, 0xfc, 0x00,
	0xb6, 0x1e, 0x27, 0x5e, 0x3e, 0x1b, 0xab, 0xdb, 0xbf, 0xe1, 0x1b, 0x3b, 0x47, 0x2f, 0xcf, 0x97,
	0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xd1, 0x9c, 0x67, 0x4b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SlaveClient is the client API for Slave service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlaveClient interface {
	// Union a set of maps.
	Union(ctx context.Context, in *UnionRequest, opts ...grpc.CallOption) (*Tree, error)
}

type slaveClient struct {
	cc grpc.ClientConnInterface
}

func NewSlaveClient(cc grpc.ClientConnInterface) SlaveClient {
	return &slaveClient{cc}
}

func (c *slaveClient) Union(ctx context.Context, in *UnionRequest, opts ...grpc.CallOption) (*Tree, error) {
	out := new(Tree)
	err := c.cc.Invoke(ctx, "/Slave/Union", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlaveServer is the server API for Slave service.
type SlaveServer interface {
	// Union a set of maps.
	Union(context.Context, *UnionRequest) (*Tree, error)
}

// UnimplementedSlaveServer can be embedded to have forward compatible implementations.
type UnimplementedSlaveServer struct {
}

func (*UnimplementedSlaveServer) Union(ctx context.Context, req *UnionRequest) (*Tree, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Union not implemented")
}

func RegisterSlaveServer(s *grpc.Server, srv SlaveServer) {
	s.RegisterService(&_Slave_serviceDesc, srv)
}

func _Slave_Union_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlaveServer).Union(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Slave/Union",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlaveServer).Union(ctx, req.(*UnionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Slave_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Slave",
	HandlerType: (*SlaveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Union",
			Handler:    _Slave_Union_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slave.proto",
}
