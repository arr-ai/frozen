// Code generated by protoc-gen-go. DO NOT EDIT.
// source: slave.proto

package slave

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Value struct {
	// Types that are valid to be assigned to Choice:
	//	*Value_I
	//	*Value_F
	//	*Value_Set
	//	*Value_Map
	Choice               isValue_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{0}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_Choice interface {
	isValue_Choice()
}

type Value_I struct {
	I int64 `protobuf:"varint,1,opt,name=i,proto3,oneof"`
}

type Value_F struct {
	F float32 `protobuf:"fixed32,2,opt,name=f,proto3,oneof"`
}

type Value_Set struct {
	Set *Set `protobuf:"bytes,3,opt,name=set,proto3,oneof"`
}

type Value_Map struct {
	Map *Map `protobuf:"bytes,4,opt,name=map,proto3,oneof"`
}

func (*Value_I) isValue_Choice() {}

func (*Value_F) isValue_Choice() {}

func (*Value_Set) isValue_Choice() {}

func (*Value_Map) isValue_Choice() {}

func (m *Value) GetChoice() isValue_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *Value) GetI() int64 {
	if x, ok := m.GetChoice().(*Value_I); ok {
		return x.I
	}
	return 0
}

func (m *Value) GetF() float32 {
	if x, ok := m.GetChoice().(*Value_F); ok {
		return x.F
	}
	return 0
}

func (m *Value) GetSet() *Set {
	if x, ok := m.GetChoice().(*Value_Set); ok {
		return x.Set
	}
	return nil
}

func (m *Value) GetMap() *Map {
	if x, ok := m.GetChoice().(*Value_Map); ok {
		return x.Map
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Value) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Value_I)(nil),
		(*Value_F)(nil),
		(*Value_Set)(nil),
		(*Value_Map)(nil),
	}
}

type Set struct {
	Element              []*Value `protobuf:"bytes,1,rep,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Set) Reset()         { *m = Set{} }
func (m *Set) String() string { return proto.CompactTextString(m) }
func (*Set) ProtoMessage()    {}
func (*Set) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{1}
}

func (m *Set) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Set.Unmarshal(m, b)
}
func (m *Set) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Set.Marshal(b, m, deterministic)
}
func (m *Set) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Set.Merge(m, src)
}
func (m *Set) XXX_Size() int {
	return xxx_messageInfo_Set.Size(m)
}
func (m *Set) XXX_DiscardUnknown() {
	xxx_messageInfo_Set.DiscardUnknown(m)
}

var xxx_messageInfo_Set proto.InternalMessageInfo

func (m *Set) GetElement() []*Value {
	if m != nil {
		return m.Element
	}
	return nil
}

type Map struct {
	Entry                []*Map_KV `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Map) Reset()         { *m = Map{} }
func (m *Map) String() string { return proto.CompactTextString(m) }
func (*Map) ProtoMessage()    {}
func (*Map) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{2}
}

func (m *Map) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Map.Unmarshal(m, b)
}
func (m *Map) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Map.Marshal(b, m, deterministic)
}
func (m *Map) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Map.Merge(m, src)
}
func (m *Map) XXX_Size() int {
	return xxx_messageInfo_Map.Size(m)
}
func (m *Map) XXX_DiscardUnknown() {
	xxx_messageInfo_Map.DiscardUnknown(m)
}

var xxx_messageInfo_Map proto.InternalMessageInfo

func (m *Map) GetEntry() []*Map_KV {
	if m != nil {
		return m.Entry
	}
	return nil
}

type Map_KV struct {
	Key                  *Value   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *Value   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Map_KV) Reset()         { *m = Map_KV{} }
func (m *Map_KV) String() string { return proto.CompactTextString(m) }
func (*Map_KV) ProtoMessage()    {}
func (*Map_KV) Descriptor() ([]byte, []int) {
	return fileDescriptor_5203a3ed916706d4, []int{2, 0}
}

func (m *Map_KV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Map_KV.Unmarshal(m, b)
}
func (m *Map_KV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Map_KV.Marshal(b, m, deterministic)
}
func (m *Map_KV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Map_KV.Merge(m, src)
}
func (m *Map_KV) XXX_Size() int {
	return xxx_messageInfo_Map_KV.Size(m)
}
func (m *Map_KV) XXX_DiscardUnknown() {
	xxx_messageInfo_Map_KV.DiscardUnknown(m)
}

var xxx_messageInfo_Map_KV proto.InternalMessageInfo

func (m *Map_KV) GetKey() *Value {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Map_KV) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Value)(nil), "Value")
	proto.RegisterType((*Set)(nil), "Set")
	proto.RegisterType((*Map)(nil), "Map")
	proto.RegisterType((*Map_KV)(nil), "Map.KV")
}

func init() { proto.RegisterFile("slave.proto", fileDescriptor_5203a3ed916706d4) }

var fileDescriptor_5203a3ed916706d4 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x3f, 0x6b, 0xc3, 0x30,
	0x10, 0x47, 0x2d, 0x2b, 0x72, 0xca, 0x19, 0x3a, 0x08, 0x0a, 0x22, 0xb4, 0x45, 0x78, 0xa9, 0x26,
	0x0d, 0xee, 0xda, 0xa9, 0x53, 0x20, 0x78, 0x91, 0xc1, 0xbb, 0x12, 0x2e, 0xad, 0xa9, 0x1d, 0x0b,
	0x47, 0x0d, 0xe4, 0xdb, 0x97, 0x53, 0x52, 0x3c, 0xfe, 0xde, 0x3b, 0xee, 0x1f, 0x94, 0xe7, 0xc1,
	0x5f, 0xd0, 0x86, 0x79, 0x8a, 0x53, 0x85, 0x20, 0x3a, 0x3f, 0xfc, 0xa2, 0x7c, 0x04, 0xd6, 0x2b,
	0xa6, 0x99, 0xe1, 0xdb, 0xcc, 0xb1, 0x9e, 0xf2, 0x51, 0xe5, 0x9a, 0x99, 0x9c, 0xf2, 0x51, 0x2a,
	0xe0, 0x67, 0x8c, 0x8a, 0x6b, 0x66, 0xca, 0x7a, 0x65, 0x5b, 0x8c, 0xdb, 0xcc, 0x11, 0x22, 0x33,
	0xfa, 0xa0, 0x56, 0x77, 0xd3, 0xf8, 0x40, 0x66, 0xf4, 0xe1, 0xf3, 0x01, 0x8a, 0xc3, 0xf7, 0xd4,
	0x1f, 0xb0, 0x7a, 0x03, 0xde, 0x62, 0x94, 0x1a, 0xd6, 0x38, 0xe0, 0x88, 0xa7, 0xa8, 0x98, 0xe6,
	0xa6, 0xac, 0x0b, 0x9b, 0xa6, 0xbb, 0x7f, 0x5c, 0xed, 0x81, 0x37, 0x3e, 0xc8, 0x17, 0x10, 0x78,
	0x8a, 0xf3, 0xf5, 0x5e, 0xb6, 0xa6, 0xae, 0x76, 0xd7, 0xb9, 0x1b, 0xdd, 0x7c, 0x40, 0xbe, 0xeb,
	0x68, 0xf0, 0x0f, 0x5e, 0xd3, 0xd2, 0x4b, 0x27, 0x42, 0xf2, 0x19, 0xc4, 0x85, 0x52, 0x3a, 0x60,
	0x71, 0x37, 0x58, 0xbf, 0x82, 0x68, 0xe9, 0x05, 0xf2, 0x09, 0x44, 0x83, 0xf3, 0x17, 0xca, 0x74,
	0xcf, 0x26, 0xed, 0x5e, 0x65, 0xfb, 0x22, 0xbd, 0xe6, 0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x26,
	0x47, 0xa0, 0xaa, 0x29, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SlaveClient is the client API for Slave service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlaveClient interface {
	// Merge a set of maps.
	Merge(ctx context.Context, in *Set, opts ...grpc.CallOption) (*Map, error)
}

type slaveClient struct {
	cc grpc.ClientConnInterface
}

func NewSlaveClient(cc grpc.ClientConnInterface) SlaveClient {
	return &slaveClient{cc}
}

func (c *slaveClient) Merge(ctx context.Context, in *Set, opts ...grpc.CallOption) (*Map, error) {
	out := new(Map)
	err := c.cc.Invoke(ctx, "/Slave/Merge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlaveServer is the server API for Slave service.
type SlaveServer interface {
	// Merge a set of maps.
	Merge(context.Context, *Set) (*Map, error)
}

// UnimplementedSlaveServer can be embedded to have forward compatible implementations.
type UnimplementedSlaveServer struct {
}

func (*UnimplementedSlaveServer) Merge(ctx context.Context, req *Set) (*Map, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Merge not implemented")
}

func RegisterSlaveServer(s *grpc.Server, srv SlaveServer) {
	s.RegisterService(&_Slave_serviceDesc, srv)
}

func _Slave_Merge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Set)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlaveServer).Merge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Slave/Merge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlaveServer).Merge(ctx, req.(*Set))
	}
	return interceptor(ctx, in, info, handler)
}

var _Slave_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Slave",
	HandlerType: (*SlaveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Merge",
			Handler:    _Slave_Merge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "slave.proto",
}
